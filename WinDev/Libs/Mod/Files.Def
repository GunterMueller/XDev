DEFINITION Files; (* portable layer for LibC - file IO. *)

  TYPE
    File = RECORD (* Binary file. *)
      end-: BOOLEAN; (* Is end of file? *)
      error-: BOOLEAN; (* Is no file errors? *)
      PROCEDURE (VAR file: File) Close;
      (* UNSAFE! Make sure that value of array 'fname' is null-terminated. *)
      PROCEDURE (VAR file: File) OpenToRead (fname: STRING);
      (* UNSAFE! Make sure that value of array 'fname' is null-terminated. *)
      PROCEDURE (VAR file: File) OpenToWrite (fname: STRING);
    END;
    FileToRead = RECORD (File) (* Binary file to read only. *)
      PROCEDURE (VAR fromfile: FileToRead) ReadByte(): SYSTEM.BYTE;
    END;
    FileToWrite = RECORD (File) (* Binary file to write only. *)
      PROCEDURE (VAR tofile: FileToWrite) WriteByte(byte: SYSTEM.BYTE);
    END;

  (* UNSAFE! Make sure that value of array 'fname' is null-terminated. *)
  PROCEDURE DeleteFile (fname: STRING): BOOLEAN;
  (* UNSAFE! Make sure that value of array 'fname' is null-terminated. *)
  PROCEDURE ExistsFile (fname: STRING): BOOLEAN;

END Files.

