Некоторые Си-компиляторы, особенно старые, при генерации статической
библиотеки включают в неё все сущности одним блоком, и при использовании
такой библиотеки линкер подключает абсолютно весь код, а не только лишь
использованные функции. Например, такой "умной" линковки при добавлении
сущностей из объектных файлов нет в компиляторах tcc (Tiny C) и SDCC.

Поэтому при разработке библиотек для этих компиляторов экономия кода может
быть достигнута если код вручную разделён на атомарные сущности
(переменные, функции) и представляет в итоге набор объектных файлов,
которые могут быть зависимыми друг от друга.

Такие атомарные (неделимые) сущности линковки включаются в целевой код
полностью. Логично, что чем меньше атомарность, тем потенциально компактнее
будет целевой код. Так что практически всегда есть смысл включать каждую
функцию (или переменную) в отдельный объектный файл — только так будет
достигаться "умная" линковка с отбрасыванием неиспользуемых библиотечных
функций.

Для облегчения разбивки исходных сишных текстов на фрагменты с отдельными
функциями я написал утилиту smartlib, облегчающую подготовку библиотек.
Она автоматически делит сишный исходник на несколько (по отдельным функциям
или как-либо ещё). Заголовок и "линии отреза" задаются с помощью специального
вида комментариев:

Header for copying to all parts ...
/*========= Header ==================*/
Function1 ...
/*-------- Cut here -----------------*/
Function2 ...
/*-------- Cut here -----------------*/
Function3 ...

Здесь заголовок будет всегда подключаться к каждому фрагменту, т.е.

    Фрагмент 1:

Header for copying to all parts ...
/*========= Header ==================*/
Function1 ...

    Фрагмент 2:

Header for copying to all parts ...
/*========= Header ==================*/
Function2 ...

    Фрагмент 3:

Header for copying to all parts ...
/*========= Header ==================*/
Function3 ...

Командная строка для вызова smartlib:

smartlib.exe src.c [partname] [-noinit] [-nocut]

Здесь:

    src.c - обрабатываемый утилитой сишный исходник.

    partname - имя части (было добавлено чтобы иметь возможность
               использовать короткие имена DOS для длинного имени
               исходника). Например:
               smartlib.exe longname.c lnam

Ключи для использования утилиты в XDev/Ofront:

   -nocut - не разрезать исходник (если не нужна "умная" линковка).

   -noinit - отрезать (не включать в библиотеку) инициализатор модуля вида:

               export void *GRAPH0__init(void)
               {
               	__DEFMOD;
               	__IMPORT(Asm__init);
               	__REGMOD("GRAPH0", 0);
               	__REGCMD("CLS2", GRAPH0_CLS2);
               	__REGCMD("GCLS", GRAPH0_GCLS);
               	__REGCMD("SCRDOT", GRAPH0_SCRDOT);
               	__REGCMD("SCRNAD", GRAPH0_SCRNAD);
               /* BEGIN */
               	__ENDMOD;
               }

             а фактически последний фрагмент. Нужно для сборки
             Оберон-библиотек (чтобы повысить эффективность кода).

Форум поддержки утилиты smartlib:

    http://zx.oberon2.ru/forum/viewtopic.php?f=10&t=34
